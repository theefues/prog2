<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Gödel!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
	    <section>
        <title>STL map érték szerinti rendezése</title>
        <para>
		Például: https://github.com/nbatfai/future/blob/master/cs/F9F2/fenykard.cpp#L180

        </para>
        <para>
        A feladatunk, hogy adott string-int párosokat rendezzünk sorba az int értéket figyelembe véve. Ehhez a fenykard.cpp -ben használt sort_map funkciót használjuk fel:
        </para>
<programlisting language='c++'><![CDATA[
vector<pair<string, int>> sort_map(map <string, int>& rank) {
	vector<pair<string, int>> ordered;
	for (auto& i : rank) {
		if (i.second) {
			pair<string, int> p{ i.first, i.second };
			ordered.push_back(p);
		}
	}
	sort(
		begin(ordered), end(ordered),
		[=](auto&& p1, auto&& p2) {
		return p1.second > p2.second;
	}
	);
	return ordered;
}
]]></programlisting>
<para>Ezzel végig megyünk a map összes értékén, és sorbarendezzük őket nagyság szerinti csökkenő sorrendben. Ez után a mainben már csak annyi a dolgunk, hogy konstruktálunk egy mapot, amit
sortolhatunk vele.</para>
<programlisting language='c++'><![CDATA[
int main() {
	map <string, int> rank;
	rank.insert(pair<string, int>("Alma", 60));
	rank.insert(pair<string, int>("Körte", 30));
	rank.insert(pair<string, int>("Szilva", 45));
	rank.insert(pair<string, int>("Barack", 20));
	rank.insert(pair<string, int>("Vegyes", 71));
	vector<pair<string, int>> res = sort_map(rank);
	for (auto& i : res)
		cout << i.first << " " << i.second << endl;
	return 0;
}
]]></programlisting>
<para>Felvesszük a rank mapunkat, majd feltöltjük értékpárokkal. Ez után sortoljuk a sort_map funkcióval, az eredményt pedig felvesszük a res vektorba. Ez után végigmegyünk a vektoron és kiíratjuk az
értékpárokat.</para>
<mediaobject>
                <imageobject>
                    <imagedata fileref="img/stlmap.png"  scale="100"/>
                </imageobject>
        </mediaobject>
    </section>      
	    <section>
        <title>Alternatív Tabella rendezése</title>
        <para>
		Mutassuk be a https://progpater.blog.hu/2011/03/11/alternativ_tabella a programban a java.lang
Interface Comparable T szerepét!
        </para>
        <para>
        A program egy adott mátrix alapján generál nekünk a csapatok pontszámait felhasználva egy rangsort, amely megpróbálja figyelembe venni, hogy a csapat melyik csapattal szemben érte el az adott eredményt. Két osztályra lesz szükségünk, a Wiki2Matrix és az AlternativTabella 
        osztályokra. A Wiki2Matrixban legeneráljuk a rangsoroláshoz szükséges L mátrix értékeit a mérkőzések eredményei alapján. Ha a hazai csapat győzött, 1, ha döntetlen lett, 2, ha a vendég csapat győzött, 3 és ahol a táblázatban nincs érték (tehát a csapatok megegyeznek), ott
        0-át veszünk fel értékként. A táblázat megtalálható a Wikipédián. Ha aktualizáltuk a Kereszt mátrixot, legenerálhatjuk a pontokat:
        <mediaobject>
                <imageobject>
                    <imagedata fileref="img/tabella.png"  scale="50"/>
                </imageobject>
        </mediaobject>
        Az itt kapott értékeket ez után behelyettesítjük az AlternativTabella osztály L mátrixába, majd a csapatok neveit, valamint pontjait is aktualizáljuk. Ez után a programot futtatva megkapjuk a rangsorolást: 
        <mediaobject>
                <imageobject>
                    <imagedata fileref="img/tabellarendezett.png"  scale="100"/>
                </imageobject>
        </mediaobject>
        Ez a rendezés az AlternativTabella Csapat osztályán belül történik meg, ahol a Comparable compareTo függvényével hasonlítja össze a két csapat értékét, és visszaad egy -1, 0 vagy 1 értéket annak függvényében, hogy az adott csapatpáros milyen eredménnyel zárt.
        </para>
                <programlisting language='java'><![CDATA[
class Csapat implements Comparable<Csapat> {

  protected String nev;
  protected double ertek;

  public Csapat(String nev, double ertek) {
    this.nev = nev;
    this.ertek = ertek;
  }

  public int compareTo(Csapat csapat) {
    if (this.ertek < csapat.ertek) {
      return -1;
    } else if (this.ertek > csapat.ertek) {
      return 1;
    } else {
      return 0;
    }
  }
}
]]></programlisting>
    </section>          
	        <section>
        <title>Gimp Scheme hack</title>
        <para>
           Ha az előző félévben nem dolgoztad fel a témát (például a mandalás vagy a króm szöveges
dobozosat) akkor itt az alkalom!
        </para>
        <para>
            Megoldás videó: <link xlink:href="https://youtu.be/OKdAkI_c7Sc">https://youtu.be/OKdAkI_c7Sc</link>      
        </para>
        <para>
            Megoldás forrása: Kód: Bátfai Norbert <link xlink:href="https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Chrome">https://gitlab.com/nbatfai/bhax/tree/master/attention_raising/GIMP_Lisp/Chrome</link>               
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat:
        </para>    
        <para>Krómos színátmenetet készítünk egy bemeneti szövegre. Beimportáljuk a szükséges scriptet a GIMP-be.</para>
<para>A kódot .scm kiterjesztésben bemásoljuk a GIMP scriptkönyvtárába, majd ráfrissítünk.</para>
        <programlisting language="c"><![CDATA[
        
 (define (color-curve)
    (let* (
        (tomb (cons-array 8 'byte))
    )
        (aset tomb 0 0)
        (aset tomb 1 0)
        (aset tomb 2 50)
        (aset tomb 3 190)
        (aset tomb 4 110)
        (aset tomb 5 20)
        (aset tomb 6 200)
        (aset tomb 7 190)
    tomb)    
)

;(color-curve)

(define (elem x lista)

    (if (= x 1) (car lista) (elem (- x 1) ( cdr lista ) ) )

)

(define (text-wh text font fontsize)
(let*
    (
        (text-width 1)
        (text-height 1)
    )
 
    (set! text-width (car (gimp-text-get-extents-fontname text fontsize PIXELS font)))    
    (set! text-height (elem 2  (gimp-text-get-extents-fontname text fontsize PIXELS font)))    
    
    (list text-width text-height)
    )
)

;(text-width "alma" "Sans" 100)

(define (script-fu-bhax-chrome text font fontsize width height color gradient)
(let*
    (
        (image (car (gimp-image-new width height 0)))
        (layer (car (gimp-layer-new image width height RGB-IMAGE "bg" 100 LAYER-MODE-NORMAL-LEGACY)))
        (textfs)
        (text-width (car (text-wh text font fontsize)))
        (text-height (elem 2 (text-wh text font fontsize)))
        (layer2)        
    )
    
    ;step 1
    (gimp-image-insert-layer image layer 0 0)
    (gimp-context-set-foreground '(0 0 0))
    (gimp-drawable-fill layer  FILL-FOREGROUND )
    (gimp-context-set-foreground '(255 255 255))
   
    (set! textfs (car (gimp-text-layer-new image text font fontsize PIXELS)))
    (gimp-image-insert-layer image textfs 0 0)   
    (gimp-layer-set-offsets textfs (- (/ width 2) (/ text-width 2)) (- (/ height 2) (/ text-height 2)))
   
    (set! layer (car(gimp-image-merge-down image textfs CLIP-TO-BOTTOM-LAYER)))
   
    ;step 2   
    (plug-in-gauss-iir RUN-INTERACTIVE image layer 15 TRUE TRUE)
   
    ;step 3
    (gimp-drawable-levels layer HISTOGRAM-VALUE .11 .42 TRUE 1 0 1 TRUE)
   
    ;step 4   
    (plug-in-gauss-iir RUN-INTERACTIVE image layer 2 TRUE TRUE)

    ;step 5    
    (gimp-image-select-color image CHANNEL-OP-REPLACE layer '(0 0 0))
    (gimp-selection-invert image)

    ;step 6        
    (set! layer2 (car (gimp-layer-new image width height RGB-IMAGE "2" 100 LAYER-MODE-NORMAL-LEGACY)))
    (gimp-image-insert-layer image layer2 0 0)

    ;step 7        
	(gimp-context-set-gradient gradient) 
	(gimp-edit-blend layer2 BLEND-CUSTOM LAYER-MODE-NORMAL-LEGACY GRADIENT-LINEAR 100 0 REPEAT-NONE 
        FALSE TRUE 5 .1 TRUE width (/ height 3) width  (- height (/ height 3)))
    
    ;step 8        
    (plug-in-bump-map RUN-NONINTERACTIVE image layer2 layer 120 25 7 5 5 0 0 TRUE FALSE 2)
   
    ;step 9       
    (gimp-curves-spline layer2 HISTOGRAM-VALUE 8 (color-curve))
      
    (gimp-display-new image)
    (gimp-image-clean-all image)
    )
)

;(script-fu-bhax-chrome "Bátf41 Haxor" "Sans" 120 1000 1000 '(255 0 0) "Crown molding")

(script-fu-register "script-fu-bhax-chrome"
    "Chrome3"
    "Creates a chrome effect on a given text."
    "Norbert Bátfai"
    "Copyright 2019, Norbert Bátfai"
    "January 19, 2019"
    ""
    SF-STRING       "Text"      "Bátf41 Haxor"
    SF-FONT         "Font"      "Sans"
    SF-ADJUSTMENT   "Font size" '(100 1 1000 1 10 0 1)
    SF-VALUE        "Width"     "1000"
    SF-VALUE        "Height"    "1000"
    SF-COLOR        "Color"     '(255 0 0)
    SF-GRADIENT     "Gradient"  "Crown molding"    
)
(script-fu-menu-register "script-fu-bhax-chrome" 
    "<Image>/File/Create/BHAX"
)


]]></programlisting>
<para>Ha sikerült az importálás, a Create fülből elérve ezt az ablakot kapjuk:</para>
<figure>
            <title>Chrome script</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="img/chromescript.png" />
                </imageobject>
            </mediaobject>
        </figure>
        <para>A legenerált képünk pedig így néz majd ki:</para>
        <figure>
            <title>Chrome script</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="img/chrome.png" />
                </imageobject>
            </mediaobject>
        </figure>
        </section>

</chapter>                

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Chomsky!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>

    <section>
        <title>Encoding</title>
        <para>
		Fordítsuk le és futtassuk a Javat tanítok könyv MandelbrotHalmazNagyító.java forrását úgy, hogy a
fájl nevekben és a forrásokban is meghagyjuk az ékezetes betűket!
https://www.tankonyvtar.hu/hu/tartalom/tkt/javat-tanitok-javat/adatok.html
        </para>
        <para>
            A Java nyelv egyik sajátossága, hogy képes kezelni unicode karaktereket is, így a magyar betűk is használhatóak a forráskódban minden gond nélkül. A MandelbrotHalmaz ezen az elven készült, és ahol lehet, ott a magyar hosszú magánhangzók voltak előnyben részesítve.
            A MandelbrotHalmazNagyító programhoz szükség van a MandelbrotHalmaz főosztályra. Ha mindkét forrásunk megvan és megpróbáljuk lefordítani, hibát kapunk. Elméletileg. Nekem ez elsőre sikerült, így nem volt különösebb probléma. A program megjelenít egy mandelbrot halmazt,
            amelyre a kurzor segítségével ki tudunk jelölni részeket egy téglalap segítségével, így egy nagyított, újra generált képet kapunk. Ha mégsem sikerülne, annyi a dolgunk, hogy a fordítóban
            átállítjuk a karakterkódolást ISO-8859-ra. Ezt az -encoding kapcsoló segítségével adhatjuk meg, ha beírjuk utána, hogy ISO-8859.
            <mediaobject>
                <imageobject>
                    <imagedata fileref="img/mandelnagyit.png"  scale="50"/>
                </imageobject>
            </mediaobject>

        </para>
    </section>        
    	<section>
        <title>Fullscreen</title>
        <para>
            Készítsünk egy teljes képernyős Java programot!
Tipp: https://www.tankonyvtar.hu/en/tartalom/tkt/javat-tanitok-javat/ch03.html#labirintus_jatek
        </para>
        <para>
            Megoldás forrása:  <link xlink:href="https://github.com/theefues/prog2/blob/master/Chomsky/LabirintusJ%C3%A1t%C3%A9k.java">https://github.com/theefues/prog2/blob/master/Chomsky/LabirintusJ%C3%A1t%C3%A9k.java</link>       
        </para>
        <para>Tutor: Győri Márk</para>
        <para>
            A feladathoz adott tipp alapján a labirintus játék teljes képernyős változatát készítettem el. A játék futtatásához szükségesek még a képfájlok is, ezeket az adott linkről szintén
            le lehet tölteni. A futtatáshoz figyelnünk kell a kódolásra, hiszen ez is unicode karaktereket tartalmaz, amiket nem minden fordító szeret. Így ha nem sikerül lefordítanunk elsőre,
            Linuxon használjuk az -encoding kapcsolót utf8 értékkel. Ha sikerült felélesztenünk a programot, még nem lesz teljes képernyős. Ehhez le kell kérnünk a felhasználó grafikus környezetét,
            valamint több monitor esetén a fő monitort. Ezekre szerencsére létezik a Javában függvény, így nem kell bajlódnunk a megírásával. java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment() függvény
            segítségével lekérhetjük az adott grafikus környezetet, a graphicsEnvironment.getDefaultScreenDevice() függvénnyel pedig az alapértelmezett, fő monitort határozhatjuk meg. 
                         <mediaobject>
            <imageobject>
                <imagedata fileref="img/labirintus.png" scale="40" />
            </imageobject>
        </mediaobject>
            Ha ezekkel megvagyunk, a program alapértelmezetten 4:3 képarányra lett tervezve, így csak akkor futtathatjuk, ha a monitorunk támogatja a felbontást teljes képernyőben. Erre is van egy függvényünk, mégpedig a
            graphicsDevice.isFullScreenSupported(), amely megmondja, hogy futtatható-e a program teljes képernyőben. graphicsDevice.setFullScreenWindow(this) függvény segítségével a programunk elindul 
            full screen módban. Amennyiben nem támogatott a teljes képernyős mód, a program elindul keretes ablak módban, 1024x768-as felbontásban.


        </para>
    </section> 	
	<section>
        <title>Perceptron osztály</title>
        <para>
Dolgozzuk be egy külön projektbe a projekt Perceptron osztályát!
Lásd https://youtu.be/XpBnR31BRJY
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>Tutor: Győri Márk</para>
        <para>
            A mandelbrot png generátorhoz szükségünk van a libpng könyvtárra. Ezt letöltve beincludeoljuk a cpp fájlunkba. A perceptron osztály a Nahshon projektből lett átemelve, majd implementálva
            a kódba. Ezt a mlp.hpp headerben tároljuk. A futtatás a forrásfájl nevének bekérésével együtt történik, amit első argumentumként kell bevinnünk. Ha ezzel megvagyunk, bekérjük a magasságát, valamint
            a szélességét. Ezt összeszorozzuk, majd példányosítjuk a perceptron osztályunkat a kapott érték segítségével. Ezek után végigmegyünk a kép minden pixelén, amit átállít pirosra. Ez után kiírja az
            eredményt a standard outputra. Ha lefuttot a program, felszabadítja a memóriát.
        </para>
        <programlisting language='c'><![CDATA[
#include <iostream>
#include "png++/png.hpp"
#include "mlp.hpp"

using namespace std;
using namespace png;

int main ( int argc, char *argv[] )
{
	image <rgb_pixel> png_image (argv[1]);
	int size = png_image.get_width() * png_image.get_height();

	Perceptron* p = new Perceptron(3, size, 256, 1);
	
	double* image = new double[size];

	for (int i{0}; i < png_image.get_width(); i++)
		for (int j{0}; j < png_image.get_height(); j++)
			image[i * png_image.get_width() + j] = png_image[i][j].red;

	double value = (*p)(image);
	cout <<" "<< value << endl;
	
	delete p;
	delete [] image;
}
]]></programlisting>
<para>Fordításnál figyelnünk kell, hogy az -lpng kapcsolót is mellékeljük, máskülönben nem fog lefordulni a programunk!</para>
    </section> 	
        

</chapter>                
